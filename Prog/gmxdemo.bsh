clear

cat << EOF
概述
==================================
欢迎运行GROMACS示例
该例程来自GROMACS 4.x版本/share/tutor/目录
整个例程大约只需要十分钟就可以完成, 非常适合初学者学习
该例程是一个完整的分子动力学模拟过程, 涵盖了GROMACS程序基本的使用方法
模拟内容是一个水环境下的小肽链。模拟唯一需要的输入文件是该小肽链的PDB文件
如果你有疑问, 请参阅GROMACS文档, 或者发信给GROMACS开发组询问
-----------------------------------------------------------------
EOF
: <<EOF
### INTRODUCTION
Welcome to the GROMACS demo.

This is a script that takes about 10 min to run.

In this demo we will demonstrate how to simulate Molecular
Dynamics (MD) using the GROMACS software package.

The demo will perform a complete molecular dynamics (MD) simulation
of a small peptide in water. The only input file we need to do this
is a pdb file of a small peptide.

If you have any problems or remarks with respect to this demonstration,
please mail to: gromacs@gromacs.org, or check the resources on
our website http://www.gromacs.org.
EOF

# 定义分子PDB文件名 this is the demo molecule
MOL=peptide

echo -n "请按回车键<enter>"
read

clear
cat << EOF
环境变量设置
-----------------------------------------------------------------
在以下的例程中, 所有命令都直接运行, 没有添加其绝对路径
所以, 必须将GROMACS安装路径的bin文件夹加入到系统PATH变量中
如果尚未加入PATH变量, 那么运行命令时要加入命令的绝对路径
-----------------------------------------------------------------
EOF
: <<EOF
### CHECK ENVIRONMENT ###
Before we you can actually start the GROMACS demo, the programs
must be present in your PATH. This might already be the case if
they are linked to /usr/local/bin. If not, follow the instructions
in the getting started section. If GROMACS is not installed
properly on your computer, contact your system manager.
EOF

echo -n "请按回车键<enter>"
read

clear
cat << EOF
pdb2gmx
=======================
在进行如何分子动力学模拟之前, 必须建立分子的拓扑文件(扩展名为.top)
生物分子的拓扑文件可用pdb2gmx命令生成
pdb2gmx需要的唯一输入文件是分子的PDB文件(扩展名为.pdb)
许多生物分子的PDB文件可以从www.pdb.org下载

由于大部分PDB文件都未包含全部氢原子, pdb2gmx将会添加所有缺失的氢原子
执行pdb2gmx命令后得到的输出文件为
  * GROMACS结构文件 conf.gro, 包含蛋白质的所有原子, 并定义了分子结构的尺寸大小
  * 分子拓扑文件 topol.top
  * 位置限制文件 posre.itp
此外还有pdb2gmx命令自身的输出文件 _output.pdb2gmx
-----------------------------------------------------------------
EOF
: <<EOF
### PDB2GMX ###
Before we can start any simulation we need a molecular toplogy
file. This topology file ( .top extension ) is generated by the
program pdb2gmx. The only input file of the pdb2gmx program is the pdb
file of our peptide ( .pdb extension ).

Because most pdb files do not contain all hydrogen atoms, the pdb2gmx
program will also add them to our peptide. The output file which
contains the structure of the peptide when hydrogen atoms are added is a
GROMOS structure file ( .gro extension )
EOF

echo "运行pdb2gmx..."
gmx pdb2gmx -f ${MOL}.pdb  >& _output.pdb2gmx << EOF
1
1
EOF

echo "pdb2gmx 完成"
echo -n "请按回车键<enter>"
read

clear
cat << EOF
solvate
======================
由于真空环境下对分子进行模拟与实际情况相差较大, 所以模拟前必须添加水环境, 使分子溶剂化
GROMACS使用solvate命令完成分子溶剂化

solvate命令读入GROMACS结构文件, 包含所需水盒子尺寸大小的输入文件
输出文件包含分子文件和水盒子
solvate命令同时也会更改原来的拓扑文件, 使其包含水分子

在使用solvate之前, 我们需要使用editconf命令来为我们的体系定义合适的水盒子大小
-----------------------------------------------------------------
EOF
: <<EOF
### GENBOX ###
Because a simulation of a peptide in vacuo is a bit unrealistic, we
have to solvate our peptide in a box of water. genbox is the program
we use to do this.

The genbox program reads the peptide structure file and an input file
containing the sizes of the desired water box. The output of genbox is
a GROMOS structure file of a peptide solvated in a box of water. The
genbox program also changes the topology file ( .top extension ) to
include water. First we will use the program editconf to define the
right box size for our system.
EOF

echo "运行 editconf 与 solvate..."

gmx editconf -o conf_box.gro -d 0.5 >& _output.editconf
gmx solvate -cp conf_box.gro -cs -o conf_wat.gro -p >& _output.solvate
mv temp.topa* topol.top

echo "editconf 与 solvate 完成"
echo -n "请按回车键<enter>"
read

clear
cat << EOF
grompp
原则上讲, 现在我们已经可以开始进行模拟了
但这样做并不明智, 因为体系中有些原子之间的间距太小
这是由于solvate程序在添加溶剂分子过程中, 可能有些溶剂分子与蛋白原子距离太近
致使局部的排斥力太大, 存在不稳定的高能量状态
如果不进行能量最小化, 直接从这种状态开始模拟, 系统可能很不稳定, 导致模拟失败

消除这些局部高能量状态的办法是进行能量最小化
能量最小化会通过略微改变体系中原子的位置消除体系中的高能量区域

在进行能量最小化之前, 我们必须先用GROMACS的预处理程序grompp处理所有输入文件
grompp预处理拓扑文件(.top), 结构文件(.gro)和参数文件(.mdp)
然后输出一个二进制文件(.tpr)
这个二进制文件包含了模拟需要的所有信息, 利用它就可以进行能量最小化或动力学模拟
-----------------------------------------------------------------
EOF
: <<EOF
### GROMPP ###
In principle we can start a molecular dynamics simulation now. However
it is not very wise to do so, because our system is full of close
contacts. These close contacts are mainly a result of the genbox
program. The added solvent might have some close contacts with the
peptide resulting in very high repulsive energies. If we would start a
molecular dynamics (MD) simulation without energy minimisation the
system would not be stable because of these high energies.

The standard procedure to remove these close contacts is
energy minimisation (EM). Energy minimisation slightly changes the
coordinates of our system to remove high energies from our system.

Before we can start the energy minimisation we have to preprocess all
the input files with the GROMACS preprocessor named grompp. grompp
preprocesses the topology file (.top), the structure file (.gro) and a
parameter file (.mdp) resulting in a binary topology file (.tpr
extension). This binary topology file contains all information for a
simulation (in this case an energy minimisation).
EOF

echo -n "请按回车键<enter>"

echo "创建能量最小化需要的参数文件..."
cat > em.mdp << EOF
define              =  -DFLEX_SPC
constraints         =  none
integrator          =  steep
nsteps              =  10000
nstlist             =  10
ns_type             =  grid
rlist               =  1.0
rcoulomb            =  1.0
rvdw                =  1.0
;
;       Energy minimizing stuff
;
emtol               =  100.0
emstep              =  0.01
EOF

echo "运行 grompp..."

gmx grompp -f em.mdp -c conf_wat -o ${MOL}_em.tpr >& _output.grompp~em

echo "grompp 完成"
echo -n "请按回车键<enter>"
read

clear
cat << EOF
mdrun EM
====
有了二进制拓扑文件, 现在就可以开始进行能量最小化了
进行能量最小化的程序是mdrun
在GROMACS中, 所有模拟都是用mdrun程序进行的

在进行能量最小化过程中, 注意查看mdrun程序的输出文件
在输出文件在中, 从左到右
第一个数字是迭代步数
第二个数字是计算步长, 预示了体系的变化
第三个数字是体系的势能
如果模拟正常, 势能会从一个很高的值迅速降低, 最后收敛在一个很大的负值
-----------------------------------------------------------------
EOF
: <<EOF
### MDRUN EM ###
Now the binary topology file is generated, we can start the energy
minimisation (EM). The program which performs the EM is called
mdrun. In fact all simulations are performed by the same program:
mdrun.

As the energy minimisation is running, watch the output of the
program. The first number ( from left to right ) is the number of the
iteration step. The second number is the step size, which gives an
indication of the change in the system. The third number is the
potential energy of the system. This number starts at a high value and
rapidly drops down, and converges, to a large negative value.
EOF

echo -n "请按回车键<enter>"

echo "运行能量最小化mdrun..."

gmx mdrun -s ${MOL}_em -o ${MOL}_em -c ${MOL}_em -v >& _output.mdrun~em

echo "mdrun finished"
echo -n "Press <enter>"

clear
cat << EOF
grompp pr
====
能量最小化之后, 移除了高能量的紧密接触区域
接下来保持蛋白质不动, 对蛋白质周围的水环境进行动力学模拟
该过程称为位置限制分子动力学(position restrained MD)

PRMD过程中蛋白质位置保持不变, 只对对溶剂水分子进行平衡
这样可以使水分子填补由slovate程序生成的空洞

首先对下列输入文件进行预处理得到二进制文件:
结构文件(能量最小化得到的输出文件), 拓扑文件, 参数文件, 索引文件

默认情况下, 程序会将模拟体系分为几个组
在此例中我们使用两个组: Protein和SOL
它们分别表示蛋白质和溶剂
我们使用这些组将位置限制施加到蛋白的所有原子上

参数文件(.mdp)包含了PRMD所需的所有信息, 包括步长, 步数, 温度等等
参数文件还标识GROMACS模拟的类型, 如能量最小化, 位置限制或是分子动力学模拟
-----------------------------------------------------------------
EOF
: <<EOF
### GROMPP PR ###
Once all close contacts are removed from the system, we want to do
molecular dynamics of the water molecules, and keep the peptide
fixed. This is called position restrained (PR) MD.

Position restrained MD keeps the peptide fixed and lets all water
molecules equilibrate around the peptide in order to fill holes
etc. that were not filled by the genbox program.

We are first going to preprocess the input files to generate the
binary topology. The input files are the topology file, the structure
file ( output of the EM ) a parameter file, and an index file.

By default our system is split into several groups. In this case we
use two of those groups: Protein and SOL(vent). We use these groups to
put position restraints on all the atoms of the peptide.

The parameter file ( .mdp extension ) contains all information about
the PR-MD like: step size, number of steps, temperature, etc. This
parameter file also tells GROMACS what kind of simulation should be
performed ( like EM, PR-MD and MD etc. )
EOF

echo -n "请按回车键<enter>"

echo "创建参数文件..."
cat > pr.mdp << EOF
define              =  -DPOSRES
constraints         =  all-bonds
integrator          =  md
dt                  =  0.002	; ps !
nsteps              =  500	; total 1.0 ps.
nstcomm             =  1
nstxout             =  10
nstvout             =  1000
nstfout             =  0
nstlog              =  10
nstenergy           =  10
nstlist             =  10
ns_type             =  grid
rlist               =  1.0
rcoulomb            =  1.0
rvdw                =  1.0
; Berendsen temperature coupling is on in two groups
Tcoupl              =  berendsen
tau_t               =  0.1      	0.1
tc-grps		    =  protein  	sol
ref_t               =  300      	300
; Pressure coupling is not on
Pcoupl              =  no
tau_p               =  0.5
compressibility     =  4.5e-5
ref_p               =  1.0
; Generate velocites is on at 300 K.
gen_vel             =  yes
gen_temp            =  300.0
gen_seed            =  173529
EOF

echo "运行 grompp..."

gmx grompp -f pr -c ${MOL}_em -p -o ${MOL}_pr >& _output.grompp_pr

echo "grompp 完成"

echo -n "Press <enter>"
read

clear
cat << EOF
mdrun pr
现在开始进行PRMD
为了节省演示时间, 在这里我们只进行1 ps的PRMD
在实际研究中, 1 ps的模拟太短, 不大可能得到有意义的结果
-----------------------------------------------------------------
EOF

: <<EOF
### MDRUN PR ###
Now we start the position restrained molecular dynamics simulation. It
is important to note that in this example the simulated time is too
short (1 ps) to equilibrate our system completely, but that would simple take
too much time ( about one day ).
EOF

echo -n "Press <enter>"

echo "运行 mdrun..."

gmx mdrun -s ${MOL}_pr -o ${MOL}_pr -c ${MOL}_md -v >& _output.mdrun_pr

echo "mdrun finished"
echo -n "Press <enter>"
read

#################
#################
clear
cat << EOF
现在, 体系已经预平衡好, 可以进行正式的分子动力学模拟了
再次利用grompp程序将输入文件转化成二进制文件(.tpb/.tpr)
EOF
: <<EOF
### GROMPP MD ###
Now our complete system is finally ready for the actual molecular
dynamics simulation. We start again by preprocessing the input files
by the grompp program to generate the binary topology file (.tpb/.tpr
extension).
EOF

echo -n "Press <enter>"

echo "创建参数文件..."
cat > md.mdp << EOF
constraints         =  all-bonds
integrator          =  md
dt                  =  0.002	; ps !
nsteps              =  5000	; total 10.0 ps.
nstcomm             =  1
nstxout             =  50
nstvout             =  0
nstfout             =  0
nstlist             =  10
ns_type             =  grid
rlist               =  1.0
rcoulomb            =  1.0
rvdw                =  1.0
; Berendsen temperature coupling is on in two groups
Tcoupl              =  berendsen
tau_t               =  0.1	     0.1
tc-grps		    =  protein	     sol
ref_t               =  300	     300
; Pressure coupling is not on
Pcoupl              =  no
tau_p               =  0.5
compressibility     =  4.5e-5
ref_p               =  1.0
; Generate velocites is on at 300 K.
gen_vel             =  yes
gen_temp            =  300.0
gen_seed            =  173529
EOF

echo "Starting grompp..."

gmx grompp -f md -c ${MOL}_md  -o ${MOL}_md >& _output.grompp_md

echo "grompp finished"
echo -n "Press <enter>"
read

clear
cat << EOF
mdrun MD
现在开始进行分子动力学模拟
详细观察模拟步数的增加
整体模拟步数为2500, 时间长度为5ps
再次强调, 模拟时间太短, 仅适合示例
-----------------------------------------------------------------
EOF
: <<EOF
### MDRUN MD ###
Now we can start the MD simulation. Watch the number of steps
increasing ( the total number of steps is 5000, for 10 ps ).
EOF

echo -n "Press <enter>"

echo "starting mdrun..."

gmx mdrun -s ${MOL}_md -o ${MOL}_md -c ${MOL}__md -v >& _output.mdrun_md

echo "mdrun finished"
echo -n "Press <enter>"

############
############
clear
cat << EOF
### NGMX ###
最后, 可以使用Gromacs的ngmx程序观看动力学模拟轨迹（文件后缀.trj）。轨迹文件包含了分子动力学过程的坐标, 原子速度和受力情况等等。可供分析使用。
-----------------------------------------------------------------
We are finished simulating, and we are going to view the calculated
trajectory. The trajectory file ( .trr extension ) contains all
coordinates, velocities and forces of all the atoms in our system.

The next program we are going run is ngmx. ngmx is a very simple
trajectory viewer.

Once the ngmx program has been started you need to click on a few
buttons to view your trajectory.

1. Once the program has been started a dialog box shows up. Click on
the box on the left of the word Protein. ( This means that we want to
view the peptide ). Then click on the OK Button.

2. Now we see the edges of the box with a line drawing of the peptide
we just simulated.

3. Select Animation in the Display menu. If you did this correctly, a
dialog box at the bottom of the screen appears. This dialog box is
used to move through your trajectory.

4. Click on the FastForward button (two triangles pointing to the
right) and watch the peptide moving.
EOF
